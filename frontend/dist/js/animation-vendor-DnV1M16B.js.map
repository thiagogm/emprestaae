{"version":3,"file":"animation-vendor-DnV1M16B.js","sources":["../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../../node_modules/motion-utils/dist/es/noop.mjs","../../../node_modules/motion-utils/dist/es/errors.mjs","../../../node_modules/motion-utils/dist/es/memo.mjs","../../../node_modules/motion-utils/dist/es/progress.mjs","../../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","nonce","useContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","React.useEffect","Provider","value","Map","usePresence","subscribe","useEffect","safeToRemove","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","has","isEveryExitComplete","isExitComplete","noop","any","invariant","memo","callback","result","progress","from","to","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","cancel","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","min","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","Symbol","for","isRefObject","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","instance","onMount","mount","unmount","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","test","getValueState","getVelocity","resolveVariantFromProps","definition","velocity","isKeyframesTarget","resolveFinalValueInKeyframes","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","array","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","e","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","stop","runAll","filter","finished","Promise","all","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","Element","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","isNone","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245]}